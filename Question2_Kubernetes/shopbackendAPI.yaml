apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopbackend
  labels:
    app: shopbackend
  annotations:
    # Deployment information
    deployment.kubernetes.io/description: "Shop backend API deployment with security hardening"
    deployment.kubernetes.io/version: "1.0.0"
    # Change tracking
    kubectl.kubernetes.io/last-applied-configuration: ""
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shopbackend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: shopbackend
      annotations:
        # Deployment metadata
        deployment.kubernetes.io/revision: "1"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: shopbackend
          image: strm/helloworld-http:latest
          ports:
            - containerPort: 80
          env:
            - name: PORT
              value: "80"
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 1
            failureThreshold: 2
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 3000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            appArmorProfile:
              type: RuntimeDefault
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: shopbackend
  labels:
    app: shopbackend
spec:
  type: ClusterIP
  selector:
    app: shopbackend
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-sre-cronjob
  labels:
    app: hello-sre
spec:
  schedule: "*/30 * * * *"  # Every 30 minutes
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello-sre
            image: busybox:1.35
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - echo "Hello SRE"
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 3000
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
          restartPolicy: OnFailure
      backoffLimit: 3
